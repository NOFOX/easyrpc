// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto_message.proto

#ifndef PROTOBUF_proto_5fmessage_2eproto__INCLUDED
#define PROTOBUF_proto_5fmessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_proto_5fmessage_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsrequest_person_info_messageImpl();
void InitDefaultsrequest_person_info_message();
void InitDefaultsresponse_person_info_messageImpl();
void InitDefaultsresponse_person_info_message();
void InitDefaultsauto_weather_messageImpl();
void InitDefaultsauto_weather_message();
void InitDefaultsresponse_errorImpl();
void InitDefaultsresponse_error();
inline void InitDefaults() {
  InitDefaultsrequest_person_info_message();
  InitDefaultsresponse_person_info_message();
  InitDefaultsauto_weather_message();
  InitDefaultsresponse_error();
}
}  // namespace protobuf_proto_5fmessage_2eproto
class auto_weather_message;
class auto_weather_messageDefaultTypeInternal;
extern auto_weather_messageDefaultTypeInternal _auto_weather_message_default_instance_;
class request_person_info_message;
class request_person_info_messageDefaultTypeInternal;
extern request_person_info_messageDefaultTypeInternal _request_person_info_message_default_instance_;
class response_error;
class response_errorDefaultTypeInternal;
extern response_errorDefaultTypeInternal _response_error_default_instance_;
class response_person_info_message;
class response_person_info_messageDefaultTypeInternal;
extern response_person_info_messageDefaultTypeInternal _response_person_info_message_default_instance_;

// ===================================================================

class request_person_info_message : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:request_person_info_message) */ {
 public:
  request_person_info_message();
  virtual ~request_person_info_message();

  request_person_info_message(const request_person_info_message& from);

  inline request_person_info_message& operator=(const request_person_info_message& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  request_person_info_message(request_person_info_message&& from) noexcept
    : request_person_info_message() {
    *this = ::std::move(from);
  }

  inline request_person_info_message& operator=(request_person_info_message&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const request_person_info_message& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const request_person_info_message* internal_default_instance() {
    return reinterpret_cast<const request_person_info_message*>(
               &_request_person_info_message_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(request_person_info_message* other);
  friend void swap(request_person_info_message& a, request_person_info_message& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline request_person_info_message* New() const PROTOBUF_FINAL { return New(NULL); }

  request_person_info_message* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const request_person_info_message& from);
  void MergeFrom(const request_person_info_message& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(request_person_info_message* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // int32 age = 2;
  void clear_age();
  static const int kAgeFieldNumber = 2;
  ::google::protobuf::int32 age() const;
  void set_age(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:request_person_info_message)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 age_;
  mutable int _cached_size_;
  friend struct ::protobuf_proto_5fmessage_2eproto::TableStruct;
  friend void ::protobuf_proto_5fmessage_2eproto::InitDefaultsrequest_person_info_messageImpl();
};
// -------------------------------------------------------------------

class response_person_info_message : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:response_person_info_message) */ {
 public:
  response_person_info_message();
  virtual ~response_person_info_message();

  response_person_info_message(const response_person_info_message& from);

  inline response_person_info_message& operator=(const response_person_info_message& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  response_person_info_message(response_person_info_message&& from) noexcept
    : response_person_info_message() {
    *this = ::std::move(from);
  }

  inline response_person_info_message& operator=(response_person_info_message&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const response_person_info_message& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const response_person_info_message* internal_default_instance() {
    return reinterpret_cast<const response_person_info_message*>(
               &_response_person_info_message_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(response_person_info_message* other);
  friend void swap(response_person_info_message& a, response_person_info_message& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline response_person_info_message* New() const PROTOBUF_FINAL { return New(NULL); }

  response_person_info_message* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const response_person_info_message& from);
  void MergeFrom(const response_person_info_message& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(response_person_info_message* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // int32 age = 2;
  void clear_age();
  static const int kAgeFieldNumber = 2;
  ::google::protobuf::int32 age() const;
  void set_age(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:response_person_info_message)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 age_;
  mutable int _cached_size_;
  friend struct ::protobuf_proto_5fmessage_2eproto::TableStruct;
  friend void ::protobuf_proto_5fmessage_2eproto::InitDefaultsresponse_person_info_messageImpl();
};
// -------------------------------------------------------------------

class auto_weather_message : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:auto_weather_message) */ {
 public:
  auto_weather_message();
  virtual ~auto_weather_message();

  auto_weather_message(const auto_weather_message& from);

  inline auto_weather_message& operator=(const auto_weather_message& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  auto_weather_message(auto_weather_message&& from) noexcept
    : auto_weather_message() {
    *this = ::std::move(from);
  }

  inline auto_weather_message& operator=(auto_weather_message&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const auto_weather_message& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const auto_weather_message* internal_default_instance() {
    return reinterpret_cast<const auto_weather_message*>(
               &_auto_weather_message_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(auto_weather_message* other);
  friend void swap(auto_weather_message& a, auto_weather_message& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline auto_weather_message* New() const PROTOBUF_FINAL { return New(NULL); }

  auto_weather_message* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const auto_weather_message& from);
  void MergeFrom(const auto_weather_message& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(auto_weather_message* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string city_name = 1;
  void clear_city_name();
  static const int kCityNameFieldNumber = 1;
  const ::std::string& city_name() const;
  void set_city_name(const ::std::string& value);
  #if LANG_CXX11
  void set_city_name(::std::string&& value);
  #endif
  void set_city_name(const char* value);
  void set_city_name(const char* value, size_t size);
  ::std::string* mutable_city_name();
  ::std::string* release_city_name();
  void set_allocated_city_name(::std::string* city_name);

  // string weather = 2;
  void clear_weather();
  static const int kWeatherFieldNumber = 2;
  const ::std::string& weather() const;
  void set_weather(const ::std::string& value);
  #if LANG_CXX11
  void set_weather(::std::string&& value);
  #endif
  void set_weather(const char* value);
  void set_weather(const char* value, size_t size);
  ::std::string* mutable_weather();
  ::std::string* release_weather();
  void set_allocated_weather(::std::string* weather);

  // @@protoc_insertion_point(class_scope:auto_weather_message)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr city_name_;
  ::google::protobuf::internal::ArenaStringPtr weather_;
  mutable int _cached_size_;
  friend struct ::protobuf_proto_5fmessage_2eproto::TableStruct;
  friend void ::protobuf_proto_5fmessage_2eproto::InitDefaultsauto_weather_messageImpl();
};
// -------------------------------------------------------------------

class response_error : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:response_error) */ {
 public:
  response_error();
  virtual ~response_error();

  response_error(const response_error& from);

  inline response_error& operator=(const response_error& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  response_error(response_error&& from) noexcept
    : response_error() {
    *this = ::std::move(from);
  }

  inline response_error& operator=(response_error&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const response_error& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const response_error* internal_default_instance() {
    return reinterpret_cast<const response_error*>(
               &_response_error_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(response_error* other);
  friend void swap(response_error& a, response_error& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline response_error* New() const PROTOBUF_FINAL { return New(NULL); }

  response_error* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const response_error& from);
  void MergeFrom(const response_error& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(response_error* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string error_string = 2;
  void clear_error_string();
  static const int kErrorStringFieldNumber = 2;
  const ::std::string& error_string() const;
  void set_error_string(const ::std::string& value);
  #if LANG_CXX11
  void set_error_string(::std::string&& value);
  #endif
  void set_error_string(const char* value);
  void set_error_string(const char* value, size_t size);
  ::std::string* mutable_error_string();
  ::std::string* release_error_string();
  void set_allocated_error_string(::std::string* error_string);

  // int32 error_code = 1;
  void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  ::google::protobuf::int32 error_code() const;
  void set_error_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:response_error)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr error_string_;
  ::google::protobuf::int32 error_code_;
  mutable int _cached_size_;
  friend struct ::protobuf_proto_5fmessage_2eproto::TableStruct;
  friend void ::protobuf_proto_5fmessage_2eproto::InitDefaultsresponse_errorImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// request_person_info_message

// string name = 1;
inline void request_person_info_message::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& request_person_info_message::name() const {
  // @@protoc_insertion_point(field_get:request_person_info_message.name)
  return name_.GetNoArena();
}
inline void request_person_info_message::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:request_person_info_message.name)
}
#if LANG_CXX11
inline void request_person_info_message::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:request_person_info_message.name)
}
#endif
inline void request_person_info_message::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:request_person_info_message.name)
}
inline void request_person_info_message::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:request_person_info_message.name)
}
inline ::std::string* request_person_info_message::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:request_person_info_message.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* request_person_info_message::release_name() {
  // @@protoc_insertion_point(field_release:request_person_info_message.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void request_person_info_message::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:request_person_info_message.name)
}

// int32 age = 2;
inline void request_person_info_message::clear_age() {
  age_ = 0;
}
inline ::google::protobuf::int32 request_person_info_message::age() const {
  // @@protoc_insertion_point(field_get:request_person_info_message.age)
  return age_;
}
inline void request_person_info_message::set_age(::google::protobuf::int32 value) {
  
  age_ = value;
  // @@protoc_insertion_point(field_set:request_person_info_message.age)
}

// -------------------------------------------------------------------

// response_person_info_message

// string name = 1;
inline void response_person_info_message::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& response_person_info_message::name() const {
  // @@protoc_insertion_point(field_get:response_person_info_message.name)
  return name_.GetNoArena();
}
inline void response_person_info_message::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:response_person_info_message.name)
}
#if LANG_CXX11
inline void response_person_info_message::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:response_person_info_message.name)
}
#endif
inline void response_person_info_message::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:response_person_info_message.name)
}
inline void response_person_info_message::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:response_person_info_message.name)
}
inline ::std::string* response_person_info_message::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:response_person_info_message.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* response_person_info_message::release_name() {
  // @@protoc_insertion_point(field_release:response_person_info_message.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void response_person_info_message::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:response_person_info_message.name)
}

// int32 age = 2;
inline void response_person_info_message::clear_age() {
  age_ = 0;
}
inline ::google::protobuf::int32 response_person_info_message::age() const {
  // @@protoc_insertion_point(field_get:response_person_info_message.age)
  return age_;
}
inline void response_person_info_message::set_age(::google::protobuf::int32 value) {
  
  age_ = value;
  // @@protoc_insertion_point(field_set:response_person_info_message.age)
}

// -------------------------------------------------------------------

// auto_weather_message

// string city_name = 1;
inline void auto_weather_message::clear_city_name() {
  city_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& auto_weather_message::city_name() const {
  // @@protoc_insertion_point(field_get:auto_weather_message.city_name)
  return city_name_.GetNoArena();
}
inline void auto_weather_message::set_city_name(const ::std::string& value) {
  
  city_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:auto_weather_message.city_name)
}
#if LANG_CXX11
inline void auto_weather_message::set_city_name(::std::string&& value) {
  
  city_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:auto_weather_message.city_name)
}
#endif
inline void auto_weather_message::set_city_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  city_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:auto_weather_message.city_name)
}
inline void auto_weather_message::set_city_name(const char* value, size_t size) {
  
  city_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:auto_weather_message.city_name)
}
inline ::std::string* auto_weather_message::mutable_city_name() {
  
  // @@protoc_insertion_point(field_mutable:auto_weather_message.city_name)
  return city_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* auto_weather_message::release_city_name() {
  // @@protoc_insertion_point(field_release:auto_weather_message.city_name)
  
  return city_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void auto_weather_message::set_allocated_city_name(::std::string* city_name) {
  if (city_name != NULL) {
    
  } else {
    
  }
  city_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), city_name);
  // @@protoc_insertion_point(field_set_allocated:auto_weather_message.city_name)
}

// string weather = 2;
inline void auto_weather_message::clear_weather() {
  weather_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& auto_weather_message::weather() const {
  // @@protoc_insertion_point(field_get:auto_weather_message.weather)
  return weather_.GetNoArena();
}
inline void auto_weather_message::set_weather(const ::std::string& value) {
  
  weather_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:auto_weather_message.weather)
}
#if LANG_CXX11
inline void auto_weather_message::set_weather(::std::string&& value) {
  
  weather_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:auto_weather_message.weather)
}
#endif
inline void auto_weather_message::set_weather(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  weather_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:auto_weather_message.weather)
}
inline void auto_weather_message::set_weather(const char* value, size_t size) {
  
  weather_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:auto_weather_message.weather)
}
inline ::std::string* auto_weather_message::mutable_weather() {
  
  // @@protoc_insertion_point(field_mutable:auto_weather_message.weather)
  return weather_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* auto_weather_message::release_weather() {
  // @@protoc_insertion_point(field_release:auto_weather_message.weather)
  
  return weather_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void auto_weather_message::set_allocated_weather(::std::string* weather) {
  if (weather != NULL) {
    
  } else {
    
  }
  weather_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), weather);
  // @@protoc_insertion_point(field_set_allocated:auto_weather_message.weather)
}

// -------------------------------------------------------------------

// response_error

// int32 error_code = 1;
inline void response_error::clear_error_code() {
  error_code_ = 0;
}
inline ::google::protobuf::int32 response_error::error_code() const {
  // @@protoc_insertion_point(field_get:response_error.error_code)
  return error_code_;
}
inline void response_error::set_error_code(::google::protobuf::int32 value) {
  
  error_code_ = value;
  // @@protoc_insertion_point(field_set:response_error.error_code)
}

// string error_string = 2;
inline void response_error::clear_error_string() {
  error_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& response_error::error_string() const {
  // @@protoc_insertion_point(field_get:response_error.error_string)
  return error_string_.GetNoArena();
}
inline void response_error::set_error_string(const ::std::string& value) {
  
  error_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:response_error.error_string)
}
#if LANG_CXX11
inline void response_error::set_error_string(::std::string&& value) {
  
  error_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:response_error.error_string)
}
#endif
inline void response_error::set_error_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  error_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:response_error.error_string)
}
inline void response_error::set_error_string(const char* value, size_t size) {
  
  error_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:response_error.error_string)
}
inline ::std::string* response_error::mutable_error_string() {
  
  // @@protoc_insertion_point(field_mutable:response_error.error_string)
  return error_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* response_error::release_error_string() {
  // @@protoc_insertion_point(field_release:response_error.error_string)
  
  return error_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void response_error::set_allocated_error_string(::std::string* error_string) {
  if (error_string != NULL) {
    
  } else {
    
  }
  error_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_string);
  // @@protoc_insertion_point(field_set_allocated:response_error.error_string)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_proto_5fmessage_2eproto__INCLUDED
